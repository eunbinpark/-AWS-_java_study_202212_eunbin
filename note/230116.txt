셋은 겟 메소드가 없다
따라서 포이치 문을 돌려서 전부 비교를 해야한다
순서가 없다
중복이 되지 않는다
애드 올을 사용하여 리스트를 받아 넣을수도 있다
마찬가지로 리스트 내에 중복값이 있더라도 중복값을 제거하고 넣는다
맵은 컬렉션을 상속받지 않기때문에 사용불가능하다

이터레이터
이터레이터 안에 셋의 변수들을 넣어서 해즈 넥스트를 사용하여 다음이 있는지 확인하고 차례차례 꺼내 사용한다

맵
맵은 순차적으로 도는게 아니라서 포문을 사용할수 없다
또한 배열이나 리스트도 아니라서 포이치문도 사용할수 없다
따라서 셋을 사용하여 배열형태로 만들어줘야한다
키셋은 키값만 셋으로 만들어주는 것 따라서 키셋을 사용하여 키값을 셋으로 만들면 해당 셋에서 키값따라 벨류값을 얻어낼수 있다 
ex) Map.keySet(), Map.get(키값)

해시맵이라서 키값에 해시코드 사용
해시코드값은 알파벳으로 정렬이 되기 때문에 순서대로 출력됨
문자열처럼 글자의 조합으로 키값이 있으면 순서대로 출력되지 않음(무조건 키값의 해시코드에 대한 정렬로 나옴)

엔트리셋을 사용하면 키값과 벨류를 꺼내면 통채로 들고옴
맵에 있는 것을 전부 꺼내면 그것들은 전부 엔트리로 이루어진 셋이고
하나를 꺼내면 그것은 엔트리이다

맵으로 벨류값에 오브젝트를 넣어놓으면 모든 자료형이 사용가능하다(벨류에 리스트를 넣을수도 있음)
만약 그렇게 넣어놓은 것들을 꺼내서 사용하려면 그것들의 자료형은 오브젝트로 업캐스팅 되어있는 상황이기 때문에 다시 다운캐스팅 하여 사용하여야 함

메이븐 프로젝트
-프로젝트당 한번만 할수 있음

[버전 : 주버전.부버전.수버전]
주버전 : 대규모 업데이트
부버전 : 기능이 추가되거나 삭제되었을때(부분적으로)
수버전 : 추가된 기능들이 오류가 났을때

메이븐 프로젝트를 사용하려면
pom.xml 가 있어야 함

객체를 제이슨으로 바꿀수도 있어야 하고 제이슨을 객체로 바꿀수도 있어야 함
gson을 추가했기 때문에 제이슨 오브젝트도 만들수 있음
제이슨의 가장 큰 특징은 처음부터 끝까지 문자열이라는 것이다

제이슨
클래스 안의 클래스
스태틱 없이 쓰면 내부 클래스 : 

	// 클래스 안에 클래스를 사용하려면 무조건 생성해두어야 사용가능
	// 클래스를 생성하지 않고 사용하기 위하여 스태틱 사용

스태틱 안에 스태틱만 생성하지 않아도 됨
그냥 클래스는 스태틱 클래스 생성하고 안의 클래스도 생성해야함

빌더 어노테이션 안에는 올아규컨스트럭터도 포함되어있다

원래 값을 넣을 때 널이면 출력해주지 않는데 serializeNulls()를 사용하면 같이 출력해줌




예외처리
트라이캐치문
트라이문 : 예외가 일어날수도 있는 부분
캐치문 : 트라이문에서 오류(예외)가 난부분을 받아 이어 실행
캐치문안에서 하나씩 예외처리 종류별로 하나씩 다 처리해주어야 함(else if 느낌으로)
마지막에 Exception을 두어야 함






















