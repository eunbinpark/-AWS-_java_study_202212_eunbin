230102

[JDK 다운로드]
jdk11 검색 후 java se 11 archive downloads - oracle
계정 보기 - 계정 만들기 - Oracle계정만들기(클라우드x) -이메일 암호 국가 이름(둘다 영어로) 
java se development download - windows 64 installer

이클립스 2022-12버전은 jdk 17 버전부터 사용가능하기 때문에 이크립스 하용할 시 버전별로 jdk 사용가능 버전 확인하고 다운해야 함
스프링 툴은 이클립스 기능에다 앞으로 사용할 스프링 기능이 추가되어 있으므로 사용함



[변수]
변수 : 데이터를 담을 수 있는 통
변수의 크기는 다 다름 따라서 데이터의 크기에 따라 변수형이 다름
 -> 이런것을 결정하기 위하여 자료형이 존재
변수명 제약사항(뿐만 아니라 메소드 명이나 클래스명도 제약사항이 존재)
1. 변수 이름은 영문자(대문자, 소문자)나 숫자를 사용할 수 있고 구분하며, 특수 문자 중에는 $, _만 사용할 수 있다. (대문자로 쓴 것과 소문자로 쓴 것은 다른 변수로 취급)
2. 변수 이름은 숫자로 시작할 수 없다. (abc123 - O, 123abc - X)
3. 자바에서 이미 사용중인 예약어는 사용할 수 없다. (while, for, if, int 등의 예약어)

변수의 표기법
1. 카멜 표기법
-단어 구분을 위해 단어의 시작 문자를 대문자로 쓰기 때문에 중간에 낙타의 혹처럼 보인다고 해서 카멜 표기법이라고 함(시작은 무조건 소문자)
2. 헝가리안 표기법
-변수의 자료형을 접두어로 사용하여 _로 연결하여 사용
-스네이크 표기법 : 모든 문자를 대문자로 사용하여 변수명을 지정할 경우 _로 단어들을 구분하고 연결함
(데이터베이스는 대소문자 구분이 없기때문에 단어 연결을 _ 로 함)

자료형 + 변수명
선언 : 어떤 자료형의 어떤 변수명으로 지정해준다
초기화 : 현재 변수에 어떤 값이 들어있든 지정해준 값으로 초기값을 지정함

메모리
-변수는 컴퓨터 내부의 메모리 공간에 저장된다
1. 비트
-0또는 1의 값을 저장하기 위한 최소 단위
-1bit 가 가지는 총 경우의 수는 0 과 1 두가지이다
2. 바이트
8bit를 한 단위로 표준화한 용량 단위
-1byte가 나타낼 수 있는 총 경우의 수 0~255 까지 256가지

자료형
-불이언값은 가장 중요한 자료형, 조건문 실행 시 사용됨, 기본값은 false
-char 형에도 문자가 당연히 들어감 숫자와 유니코드를 매칭하여 사용
-정수랑 실수가 나눠져 있는 이유 : 메모리 공간 때문에
-char형과 short형은 같은 2byte 지만 범위가 다름 
1. 정수 
-양수, 음수, 0을 표현하기 위한 자료형
-long 자료형을 사용하기 위해서는 초기화 뒤에 L을 붙여야 함, 21억을 넘긴 값을 넘겼을 때 사용
2. 문자
-char 자료형 : '작은따옴표' 만 사용, 글자 하나만 사용
-"큰따옴표"를 사용하면 무조건 "문자열"
-컴퓨터 언어는 기본적으로 전부 숫자이고 아스키코드에 있는 것과 매칭하여 문자 사용(아스키코드 사진 추가)
-키보드는 아스키코드를 기준으로 만들어졌음
-이후에 한글, 한자 등 다른 언어를 표현하기 위해 만들어진 코드가 유니코드
3. 실수
-float, double 중 주로 double 사용, float을 사용할 시 뒤에 f 붙여아 함
4. 상수
-변수는 변하는 값 상수는 항상 변하지 않는 값
-보통 변수 자료형 앞에 final을 붙여 사용, 한번 초기화되면 바꿀수 없음
-상수는 초기화를 했으면 초기화를 해줘야 함, 초기화 없이 사용할 수 없음
*리터럴
-리터럴 상수는 변경되지 않는다
-기본 자료형은 int, double



[형 변환]
리터럴
-리터럴 상수는 변경되지 않는다
-기본 자료형은 int, double

캐스팅
-형이 다른 자료형으로 형변환하는 것
-문자 -> 정수 -> 실수 로 갈수록 상위 자료형
-상위 자료형으로 가는 것이 업캐스팅 하위 자료형으로 가는 것이 다운캐스팅
-하위 자료형으로 형변환 할 때는 무조건 명시해야 함 
-업캐스팅은 자동으로 되지만 다운캐스팅은 안됨
-업캐스팅은 묵시적 형변환 다운캐스팅은 명시적 형변환
-연산자사용보다 형변환이 우선순위가 높음



[연산자]
-항의 갯수에 따라 단항 연산자, 이항 연산자, 삼항 연산자로 나뉨
-연산을 하게 되면 항상 결과가 존재한다
-삼항연산자는 조건에 대한 참과 거짓을 판별함
-대입연산자 : 변수에 값을 대입하는 연산자 
-부호연산자 : 양수 음수를 사용하기 위해 +, - 사용
-산술연산자 : 사칙연산과 나머지를 구하는 연산자
-나누기 연산할 때 정수와 정수를 연산하면 정수로 된 몫만 나오지만 실수와 정수, 실수와 실수를 연산하면 소수점까지 나옴
-증감연산자 : ++, -- 를 사용하여 항의 값에 1을 더하거나 뻼
-증감연산자를 앞에 붙이면 연산을 먼저 하고 다음으로 넘어감 : 선증가, 선감소
-증감연산자를 뒤에 붙이면 같은 줄에 있는 다른 명령을 먼저 수행하고 연산을 진행함 : 후증가, 후감소
-관계연산자(ppt참고) : 연산의 결과는 결국 참, 거짓이기 때문에 조건문에 사용
-논리연산자 : 0과1을 가지고 참과 거짓을 계산하는 것
-논리계산에서는 0이 아니면 무조건 참
-AND 연산에서는 모두 참이어야 참, 하나라도 거짓이면 거짓
-OR 연산에서는 하나만 참이이도 참, 둘다 거짓이어야 거짓
-NOT 연산에서는 참이면 거짓, 거짓이면 참
-복합 대입 연산자 : +=, -= 등등 자기 자신에 연산을 하는 연산자
-조건연산자 -> 조건식 ? 결과1 : 결과2, 조건식이 참이면 결과1을 반환 거짓이면 결과2를 반환
-조건연산자에서 결과1 과 결과2는 같은 자료형이어야 함 



[문자열]
-여러 문자를 하나로 묶은 것
-문자열은 기본 자료형에 속하지 않는다.
-API에서 제공하는 String class 를 이용
-java.lang 안에 들어있기 때문에 String 사용가능
-문자와 문자열은 + 연산자로 합칠수 있다
-문자열의 시작과 끝은 "큰따옴표" 사용
-Scanner Class 를 사용하여 표준 입력
-스캐너를 사용하면 콘솔에서 입력을 받을 수 있음
-API에서 제공하는 java.util.Scanner class를 이용
-스캐너는 입력을 받을 때 각각의 자료형에 따라 next 뒤에 붙는게 달라짐



















